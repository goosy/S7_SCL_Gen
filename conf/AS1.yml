# YAML语法说明:
#   大小写敏感
#   使用缩进表示层级关系
#   缩进不允许使用tab，只允许空格
#   缩进的空格数不重要，只要相同层级的元素左对齐即可
#   '#'表示注释
# YAML 支持以下几种数据类型：
#   对象：键值对的集合，语法中:后有空格,: 后可以换行写复杂的value，语法：
#      key: value
#   数组：一组按次序排列的值，语法中-后有空格, - 后可以换行写复杂的value，语法：
#      - value
#   纯量（scalars）：单个的、不可再分的值，key value 最终分解为 scalars
# 用 --- 和 ... 包围的代码段为一个配置文档，配置文档之间互相独立
# 一个文件可以有多个文档，只有一个文档时， --- 和 ... 可以省略

# 转换代码说明：
# 1个文档只能定义1种类型，目前只实现了4种类型： CPU AI modbusTCP modbusRTU Valve
# 每种类型(CPU除外)都有默认的输出文件名称，可以在该文档的 option.output_file 中改变输出文件名
# 配置文档必须有 type 和 CPU 字段，2个字段都相同的配置文档只能有一个

# 程序内置了一些函数，它们有默认的内置符号，这些符号通常不需配置里设置：
# * [AI_Proc, FB512, FB512, AI process main function block] 模拟量主处理函数
# * [MB_340_Poll, FB345, FB345, MB340_FB] CP340通信主处理函数
# * [MB_341_Poll, FB346, FB346, MB340_FB] CP341通信主处理函数
# 但如果存在冲突，可以通过含 buildin 属性的对象，指示对内置符号更改，主要是更改地址和注释
# 如果不是为了重名重地址的原因，不用更改定义值

# 本示例文件有5个配置文档： CPU modbusTCP AI modbusRTU Valve

# CPU 文档
--- #文档开始

# 指示这是一个CPU空间，所有属于这个名称下的配置文档都共用相同的配置
# 输出至相同的代码文件夹中
# 代码里在同一PLC资源下分配，程序自动合并符号表
# 同一个CPU会有多种程序，比如AI、modbusRTU、modbusTCP，需要要其它文档中定义
type: CPU 

# 配置名称，自定义，
# 其它文档如指示相同的name，生成的代码会检查并避免占用同一DB块、同一连接等
# name 同时作为默认输出文件夹名称，可在 output_dir 中指定为其它输出文件夹
name: AS1

# 符号定义
# 所有的符号项目，是一个 [名称, 地址， 类型， 注释] 的数组
# 注意，符号只能定义一次，如果要使用同一个符号，应当用 {ref: name} 对象去引用
symbols:  # CPU文档下定义其它文档需要共同的符号，addr 与 内置type 不分大小写
   # 必须缩进一次的 "-" 开头，请参看yaml语法
  - [vw1, MW1000] # 测试MW
  - [vd1, Md1000, Real] # 测试同地址 MD
  - [auto_data1, mw+] # 测试自动地址
  - [auto_data2, M+]
  - [auto_data3, M+]
  - [auto_data4, M+]
  - [auto_data5, MD+, dint]

# 输出文件夹，默认为 <name>
# output_dir : 'other_folder' 

# IP地址，目前用不上
IP: [192, 168, 10, 10]
... #文档结束

---
# 指示本配置为生成 AI 代码
type: AI 
CPU: AS1 

symbols:  # 以下符号指示的块，其内容由本程序自动生成
  # 所有的符号项目，是一个 [名称, 地址， 类型， 注释] 的数组
  # 所有FB、FC块的类型一定是它自身，所以这两种块的type可以省略
  # 系统已有2个内置符号：
  #   AI_Proc FB512 : AI处理主FB
  #   AI_Loop FC512 : 主循环调用FC，将这个加入OB1中
  # 可以在对上述内置符号的地址进行更改，只要重新定义就可以了，注意保持名称一致
  - [AI_Proc, FB600] # 可省略，修改内置AI_Proc地址默认为FB512
  - [AI_Loop, FC600] # 可省略，当名称为AI_Loop，指示这是AI主调用FC块，这个要加入到OB中

list: # 模拟量列表
  - &tubepress # 设置引用锚点，该锚点表示 & 符号左侧的项目（- 或 key）指定的内容（即右侧的value）可以被引用
    comment: 进站压力
    DB: [PIT001,  DB100] # AI数据块
    input: [AI01-01, PIW512] # AI通道
    zero: "-0.2" # 以下都为初始值，即不会在运行时赋值
    span: "2.6"
    AH_limit: "2.5"
    WH_limit: "2.0"
    WL_limit: "-0.05"
    AL_limit: "-0.1"
  - <<: *tubepress # 语法"<<:" 表示将锚点tubepress的内容合并在这里
    comment: 来油压力 # 引用如果是对象，可以对部分属性进行更改，替换引用部分
    DB: [PIT002, DB+] 
    input: [AI01-02, PIW514] 
    AL_limit: ~ # 引用对象无法删除某个属性，只能将其该属性设置为null
  - comment: 进站温度
    DB: [TIT001, DB+] 
    input: [AI01-03, PIW516] # AI通道
    zero: "-40.0"
    span: "80.0"
  - comment: 气温
    DB: [TIT002, DB+]
    input: [M485-1, MW100] # M区域
    enable_alarm: TRUE # 初始值取消报警
  - comment: 液位
    DB: [LIT001, DB+]
    input: '"RecvDB".Tank1' # 引用，转换程序不检查正确性


options : # 选项，非必需，无需要时可以全部删除或注释掉。

  # 输出文件名，系统自动加后缀。
  # output_file : 'example'

...


---
type: modbusRTU # 指示是modbus转换
name: AS1

symbols:
  # 系统已有4个内置符号：
  #   MB_340_Poll FB345 : CP340 的modbus通信处理主FB
  #   MB_341_Poll FB346 : CP341 的modbus通信处理主FB 
  #   MB_Loop FC345 : 表示主循环调用FC，将这个加入OB1中
  #   MB_polls_DB DB880 : 将用于保存轮询命令数据
  # 可以在对上述内置符号的地址进行更改，只要重新定义就可以了，注意保持名称一致
  - [MB_Loop, FC342] # 更改主调用FC块 MB_Loop 地址，可省略
  - [MB_polls_DB, DB880] # 更改MB_polls_DB地址，可省略

  # 以下为自定义符号，这里是接收块
  # 建议所有的接收块都用FB定义结构，不仅减少接收块的定义工作量，还能在FB中方便地对接收后的数据进一步处理和转换。
  # 转换程序能对接收块是FB背景块的情况自动生成FB调用代码，注意接收FB不要有参数！
  # 这类FB不通用，需要另外单独写块本身。可依照本例提供的 "JS_flow"FB 块写其它场景的FB块，要对应符号表
  # JS_flow定义了本例流量接收DB块的数据结构，用于一诺的智能流量表
  - [JS_flow, FB801] 
  - [GAS_flow, FB803]
  - [STBL, FB805]
  - [launcher_data, FB806]
  - [PE01_Proc, FB807]

list : # modbus 模块列表
  - comment: CP01 Module752 河口流量 30# 31#
    type: CP340
    Laddr: 752
    DB: [CP_01, DB881]
    polls_name: 'polls_HK'
    polls:
      - comment: '河口1#流量计 30'
        deivce_ID: 30 
        function: 4 
        started_addr: 0 
        length: 28 
        CRC: F3AC # 用2字节16进制字符串表示
        recv_DB: [Flow30,  DB830, JS_flow]
        recv_start: 0
      - comment: '河口2#流量计 31' 
        deivce_ID: 31 
        function: 4 
        started_addr: 0 
        length: 28 
        CRC: F27D # 用2字节16进制字符串表示
        recv_DB: [Flow31,  DB831, JS_flow]
        recv_start: 0
  - comment: CP02 Module784 天然气流量计 1# 2# 3#
    type: CP341
    coutomTrigger: TRUE # 指示由外部定义发送时间
    REQ: M0.5 # 指定时间存储器 1HZ 发送轮询
    Laddr: 784
    DB: [CP_02, DB883]
    polls_name: 'polls_GAS'
    polls:
      - comment: '天然气1#流量计 1' 
        deivce_ID: 1 
        function: 3 
        started_addr: 4 
        length: 26 
        CRC: 85C0
        recv_DB: [GAS, DB841, GAS_flow]
        recv_start: 0
      - comment: '天然气2#流量计 2' 
        deivce_ID: 2 
        function: 3 
        started_addr: 4 
        length: 26
        CRC: 85F3 
        recv_DB: {ref: GAS} # 这个对象表示引用上一个名称为GAS符号定义的块，因为一个符号只能定义一次，所以这里引用
        recv_start: 20 # 同一个接收块，要注意开始地址不一样
      - comment: '天然气总 10#' 
        deivce_ID: 10 
        function: 3 
        started_addr: 4 
        length: 26
        CRC: 84BB 
        recv_DB: {ref: GAS}
        recv_start: 40
...


# modbusTCP 文档
---
# 指示本配置为生成 modbusTCP 代码
type: modbusTCP # 也可以写为 "type: MT"

# 指示属于哪一个CPU
CPU: AS1

# 符号定义
symbols: 
  # 所有的符号项目，是一个 [名称, 地址， 类型， 注释] 的数组
  # 系统已有2个内置符号，其内容由本程序自动生成：
  #   MB_TCP_Poll FB344 : AI处理主FB
  #   MT_Loop FC344 : 主循环调用FC，将这个加入OB1中
  #   MT_polls_DB DB881 : 用于保存轮询命令数据
  # 可以在对上述内置符号的地址进行更改，只要重新定义就可以了，注意保持名称一致
  - [MT_polls_DB, DB901] # 修改内置DB：MT_polls_DB 地址

  # 以下为自定义符号
  # - [JS_flow, FB801]  # JS_Flow 已在 MB 文档中定义，这里不要重复定义

list : # modbus TCP 连接列表
  # 第1个连接，
  - comment: 192.168.10.10:502 智能流量计 # 本连接的注释，可省略

    # 十进制连接号，自行指定，但不可重复。省略时，程序会自动生成一个从1开始且不重复的ID。
    # ID: 1
    
    # 背景连接块。不必填写type，会自动指定为 MB_TCP_Poll
    DB: [conn_example, DB891]
    
    # modbusTCP 对方IP 必填
    host: [192, 168, 10, 10] 
    
    # modbusTCP 对方端口，必填，注意host:port组合不得重复，否则报错
    port: 502 
    
    # 可直接指定id，建议用下一个local_device配置比较直观
    # local_device_id: 2 
    
    # local_device 用于PN通信的设备，目前允许的值:
    # IM151-8PN/DP
    # CPU31x-2PN/DP
    # CPU314C-2PN/DP
    # IM154-8PN/DP
    # CPU319-3PN/DP
    # CPU315T-3PN/DP
    # CPU317T-3PN/DP
    # CPU317TF-3PN/DP
    # CPU319-3PN/DP_X4
    # CPU317-2PN/DP_X4
    # CPU412-2PN
    # CPU414-3PN/DP
    # CPU416-3PN/DP
    # CPU412-5H_PN/DP_X5
    # CPU414-5H_PN/DP_X5
    # CPU416-5H_PN/DP_X5
    # CPU417-5H_PN/DP_X5
    # CPU410-5H_X8
    # CPU412-5H_PN/DP_X15
    # CPU414-5H_PN/DP_X15
    # CPU416-5H_PN/DP_X15
    # CPU417-5H_PN/DP_X15
    # CPU410-5H_X18
    local_device: CPU31x-2PN/DP 
    
    # 发出查询的时间间隔，可省略，默认为200，单位ms
    # interval_time: 200

    # 自定义查询名称，必填，不可与其它连接的重名。
    polls_name: 'polls_example' 
    
    # 该连接下的轮询定义，至少要有一个查询
    polls: 
    
      # 查询1
      - comment: '垦西1#流量计' # 本查询的注释，可省略
        deivce_ID: 1 # 设备号，即RTU从站地址
        function: 4 # modbus 功能号
        started_addr: 0 # 查询起始地址
        length: 28 # 查询长度
        recv_DB: [Flow01, DB803, JS_flow] # 接收块1
        recv_start: 0 # 接收开始位置

      # 查询2
      - comment: '垦西2#流量计' # 本查询的注释，可省略
        deivce_ID: 2 # 设备号，即RTU从站地址
        function: 4 # modbus 功能号
        started_addr: 0 # 查询起始地址
        length: 28 # 查询长度
        recv_DB: [Flow02, DB802, JS_flow] # 接收块2
        recv_start: 0 # 接收开始位置

      # 查询3
      - comment: '垦西3#流量计' # 本查询的注释，可省略
        deivce_ID: 3 # 设备号，即RTU从站地址
        function: 4 # modbus 功能号
        started_addr: 0 # 查询起始地址
        length: 28 # 查询长度
        recv_DB: [Flow03, DB+, JS_flow] # 接收块2
        recv_start: 0 # 接收开始位置

  # 更多的连接设置，可以依照上方书写，注意对齐，以对齐表示层级
  # - code

options : # 选项，非必需，无需要时可以全部删除或注释掉。

  # 输出文件名，系统自动加后缀。
  # output_file : 'example'
...

---
# 指示本配置为生成 Valve 代码
type: Valve 
CPU: AS1

symbols:  
  - [Valve_Proc, FB516]
  - [Valve_Loop, FC516]

list :
  # 没有阀位时，AI 直接设置为断线值 
  # 没有远程信号时，remote 必须分别置为 true
  # 没有故障信号时，error 必须分别置为 false
  # 以下常量可以直接使用
  # S7_ZERO := 0;
  # S7_SPAN := 27648;
  # S7_AI_MIN := -32768;
  # S7_AI_MIN_WORD := W#16#8000;
  # S7_AI_MAX := 32767;
  # S7_AI_MAX_WORD := W#16#7FFF;

  # 阀门1
  - comment: A阀门
    DB: [MGV-1201A, DB111]
    AI: [AI11-1, PIW672]
    CP: [DI01-01, I0.0]
    OP: [DI01-02, I0.1]
    error: [DI01-03, I0.2]
    remote: [DI01-04, I0.3]
    close_action: [DO01-01, Q0.0]
    open_action: [DO01-02, Q0.1]

  # 阀门2
  - comment: B阀门
    DB: [MGV-1201, DB120]
    AI: S7_AI_MIN_WORD
    CP: [DI03-01, I6.0]
    OP: [DI03-02, I6.1]
    error: FALSE
    remote: TRUE
    close_action: [DO02-01, Q4.0]

options : # 选项，非必需，无需要时可以全部删除或注释掉。

  # 输出文件名，系统自动加后缀。
  # output_file : 'example'

...