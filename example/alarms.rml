---
config_path: .                        # GCL配置文件所在目录

attributes:                           # 全局变量
  device: CPU410-5H

# 定义： `全局列表` 是由 S7_SCL_Gen 对 config_path 所在配置生成的列表（convert_list 或 copy_list）
# 定义： `全局项` 是全局列表的具体项。
# 定义： `全局规则` 是对全局列表进行转换的规则，规则定义了匹配和转换动作。所有全局规则为全局规则列表。
# 定义： `匹配列表` 是全局列表中匹配全局规则的所有项
# 定义： `匹配项` 是匹配列表的某一全局项

# 定义： `文档列表` 是某一 convert 类型全局项的 list 属性，也是一个数组。
# 定义： `文档内部项` 是文档列表中的某一项
# 定义： `文档规则` 用于对某一文档列表进行转换，规则同样定义了匹配和转换动作。
# 定义： `文档匹配列表` 是文档列表中匹配文档规则的所有项
# 定义： `文档匹配项` 是文档匹配列表中的某一项

rules:  # 在这里定义全局规则列表

# 全局规则分二种，一般规则和排序规则
# - 排序规则只包括一个 sort_by 属性，其值为字符串数组，规则作用为按照 sort 的每一项指示进行排序。
# - 一般规则包括 pattern、scope、actions 三个属性，规则的作用是依次执行以下：
#   1 对 scope 集合的所有项进行过滤，筛选出符合 pattern 的匹配项
#   2 对每一个匹配项依次应用 actions，实现对匹配项的修改或生成新项
#   3 如果是 convert 类型，可以定义 inner_rules 动作对文档内部项进行转换
#   
# # 排序规则
#
# sort_by 数组的每一项为一个字符串，指示用于排序的属性名称和是否降序
# 比如 key 为 'cpu.name'，集合的某一项为 item，则 item.cpu.name 值作为排序基准
# 以 @ 开头的排序指示降序排序，无 @ 代表升序排序。
# 具体作用步骤为：
# 1 取出 sort_by 数组的最后一个排序指示 p，作为排序的基准
# 2 对当前集合(即之前规则应用后的结果)每一项，依照 p 进行排序
# 3 重复步骤 1~2，直到 sort_by 数组所有项都做为基准对当前集合应用排序
#
# # 一般规则
#
# 规则的 pattern 属性是一个对象，符合该对象的各属性匹配表达式的列表项才会被筛选
#
# 当 pattern 某个属性是一个字符串且为下列值时，代表特殊匹配:
# - '*' 表示匹配非 null 的项
# - '%u' 表示匹配 null 的项
# - `%b` 表示匹配任意布尔项
# - `%s` 表示匹配任意字符串项
# - `%n` 表示匹配任意数字项
# - '%a' 表示匹配任意数组项
# - '%o' 表示匹配任意纯对象项
# - '%O' 表示匹配除 null boolean string number array 以外的任意对象
#
# 当 pattern 某个属性是一个字符串且不是特殊匹配时：
# - 一般字符串代表字符串肯定匹配:
#   `cpu_name: AS*` 表示匹配 CPU 名为 AS 开头的项
# - 当字符串以 ! 开头，代表否定字符串匹配:
#   `cpu_name: '!AS1'` 表示匹配 CPU 名不是 AS1 的项
#
# 当 pattern 某个属性是一个字符串数组的话，表明这是一个多项匹配模式。
# 最终结果是满足所有否定匹配并同时满足任意一个肯定匹配的项集合
# - 肯定匹配是并集
#   `feature: [AI, alarm]` 匹配 CPU 名为 AS1 或 AS2 的项
# - 否定匹配取交集
#   `cpu_name: ['!AS1', '!AS2']` 匹配 CPU 名不为 AS1 且不为 AS2 的项
# - 同时有肯定和否定匹配时，结果为 (否定匹配并集 ⋂ 否定匹配交集)
#   `cpu_name: ['AS*', '!*2', '!*3']` 匹配 CPU 名为 AS 开头且非2或3结尾的项
#
# 每一全局规则的 scope 是下面2种范围之一:
# - origin 全局列表
# - applied 已被之前规则应用后的列表
#
# 每一全局规则的 action 是下面6种动作之一，可由动作的 action_type 属性指定:
# - replace 替换
#     把原始项按照该动作的对应属性进行替换，如果是数组(比如files list)也替换
# - join 组合
#     把原始项按照该动作的对应属性进行合并，如果是数组(比如files list)则追加
# - merge 合并
#     把匹配的 convert 项合并成一个新 convert 项，按以下合并规则:
#     所有以下规则都是动作值优先
#     - 合并动作只对 convet 项有效，否则取消合并。 即其 type 值为 "convert"
#     - 以 join 方式合并 tags，动作值 tags 最终 join 到 tags 中
#     - enable 为 true
#     - 动作值 CPU\feature\platform 优先，否则一致时为原值，不一致为 ''
#     - 动作值 OE 优先，否则一致时为原值，不一致为 'utf8'
#     - 动作值 line_ending 优先，否则一致时为原值，不一致为 'LF'
#     - 动作值 template 优先，否则一致时为为原值，不一致取消合并
#     - 动作值 distance 优先，否则一致时为为原值，不一致取消合并
#     - 动作值 output_dir 优先，否则一致时为为原值，不一致取消合并
# - add 添加
#     添加 copy 项或 convert 项
#     按动作值建立1个或多个新的 copy 或 convert 项
#     这些新项在动作的 items 中，每一个 item 的各属性值可以使用模板替换
#     在替换表达式中可使用 item 变量引用匹配项
#     规则不使用 pattern 时，建立不依赖于匹配项的新项，这时 item 变量将不可用
# - delete 删除
#     把匹配项从列表中删除，即匹配项不再进行转换或复制。
#     程序会忽略之前的非 merge 或 add 动作，并忽略所有剩余的动作。
# - inner_rules 内层列表规则转换
#     用于转换文档中的内层列表
#     该 action 有 rules 属性用于定义文档规则列表
#     文档规则基本和全局规则类似，但没有 merge 动作，也不能再行嵌套 inner_rules 动作。
# 所有动作依照定义顺序执行。
#
# 动作的作用范围有如下4种，由动作的 action_scope 属性指示:
# - matched 本规则 pattern 匹配的项
# - new 本规则 add 动作增加的新项
# - merged 本规则 merge 动作合并的新项
# - all
# 动作应用的对象，省略时默认为 matched
# delete merge 动作的作用范围只能为 matched
#
# 提示：
# - add 和 merge 动作会产生新项，并不影响原有项，即原有项依然独立进行转换或复制。
# - 如果合并后不需要原有项，可以另用 delete 动作


# 本 alarms 输出只示例 merge inner_rules delete 动作
# 合并 AI alarm 为一个新文档内部项
- pattern:
    cpu_name: AS1
    feature: [AI, alarm]
    type: convert

  # scope 指定规则的应用范围
  # 由 GCL 配置文件产生的项为 origin
  # 经过本规则之前规则处理输出的项集合为 applied
  # 可省略，默认为 applied
  scope: origin

  actions:

  # 所有的 action 子项都可以使用模板替换，$ 变量为匹配的全局项

  - action_type: merge # 该属性用于指示动作类型，见上方说明
    action_scope: matched # 该属性用于指示动作应用范围，见上方说明
    # 其它属性指示动作要执行的转换
    feature: OS_alarms
    template: alarms.template
    distance: '{{$.cpu_name}}_alarms.csv'
    output_dir: OS

  - # inner_rules type 指示文档规则动作，可以省略，因为该动作必须指示 rules 属性
    # 其它全局动作对 item.tags.list 的修改功能很弱，文档规则可以执行更复杂的修改。
    # 具体的文档内部项，在下方文档动作中也可以使用 $ 引用
    # 建议文档规则定义放在其它全局动作之后。
    action_type: inner_rules

    # 这里指示动作应用于上方 merge 动作合并的新项
    action_scope: merged

    # 在这里定义文档规则
    # 文档规则只对 convert 全局项有效
    rules:  # rules 是 inner_rules 动作的必须属性
    - pattern:
        $enable_AH: {value: true}
      scope: origin
      actions:
      - action_type: add
        action_scope: matched
        tagname: 'S7Program/{{$.DB.name}}.AH_flag'
        location: '{{$.location}}'
        event: '{{$.type}}高高报警'
        PV1: 'S7Program/{{$.DB.name}}.AH_PV'
        oo: '{{$.__original_index}}'
    - pattern:
        $enable_WH: {value: true}
      scope: origin
      actions:
      - action_type: add
        action_scope: matched
        tagname: 'S7Program/{{$.DB.name}}.WH_flag'
        location: '{{$.location}}'
        event: '{{$.type}}高警告'
        PV1: 'S7Program/{{$.DB.name}}.WH_PV'
        oo: '{{$.__original_index}}'
    - pattern:
        $enable_WL: {value: true}
      scope: origin
      actions:
      - action_type: add
        action_scope: matched
        tagname: 'S7Program/{{$.DB.name}}.WL_flag'
        location: '{{$.location}}'
        event: '{{$.type}}低警告'
        PV1: 'S7Program/{{$.DB.name}}.WL_PV'
        oo: '{{$.__original_index}}'
    - pattern:
        $enable_AL: {value: true}
      scope: origin
      actions:
      - action_type: add
        action_scope: matched
        tagname: 'S7Program/{{$.DB.name}}.AL_flag'
        location: '{{$.location}}'
        event: '{{$.type}}低低报警'
        PV1: 'S7Program/{{$.DB.name}}.AL_PV'
        oo: '{{$.__original_index}}'
    - pattern: '*'
      scope: origin
      actions: delete
    - sort_by:
      - oo

  - delete # 这是 `- action_type: delete` 的简化写法 (对本例而言，这里的删除并不必须)

- pattern:
    cpu_name: AS2
    feature: [AI, alarm]
    type: convert
  scope: origin
  actions:
  - action_type: merge
    feature: OS_alarms
    template: alarms.template
    distance: '{{$.cpu_name}}_alarms.csv'
    output_dir: OS
  - action_scope: merged
    rules: # 即默认了 `action_type: inner_rules`
    - pattern:
        $enable_AH: {value: true}
      scope: origin
      actions:
      - action_type: add
        action_scope: matched
        tagname: 'S7Program/{{$.DB.name}}.AH_flag'
        location: '{{$.location}}'
        event: '{{$.type}}高高报警'
        PV1: 'S7Program/{{$.DB.name}}.AH_PV'
    - pattern:
        $enable_WH: {value: true}
      scope: origin
      actions:
      - action_type: add
        action_scope: matched
        tagname: 'S7Program/{{$.DB.name}}.WH_flag'
        location: '{{$.location}}'
        event: '{{$.type}}高警告'
        PV1: 'S7Program/{{$.DB.name}}.WH_PV'
    - pattern:
        $enable_WL: {value: true}
      scope: origin
      actions:
      - action_type: add
        action_scope: matched
        tagname: 'S7Program/{{$.DB.name}}.WL_flag'
        location: '{{$.location}}'
        event: '{{$.type}}低警告'
        PV1: 'S7Program/{{$.DB.name}}.WL_PV'
    - pattern:
        $enable_AL: {value: true}
      scope: origin
      actions:
      - action_type: add
        action_scope: matched
        tagname: 'S7Program/{{$.DB.name}}.AL_flag'
        location: '{{$.location}}'
        event: '{{$.type}}低低报警'
        PV1: 'S7Program/{{$.DB.name}}.AL_PV'
    - pattern: '*'
      scope: origin
      actions: delete
    - sort_by:
      - tagname

# 删除其它非报警项
- pattern:
    feature: '!OS_alarms'
  scope: origin
  actions: delete # 只有一个动作且是删除动作时，可以用比上2个规则更简化的写法
